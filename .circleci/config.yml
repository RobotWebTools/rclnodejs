version: 2
jobs:
  build:
    working_directory: ~/RobotWebTools/rclnodejs
    parallelism: 1
    shell: /bin/bash --login
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
    macos:
      xcode: 11.5.0
    steps:
    - checkout
    - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "package.json" }}-{{ arch }}
        # fallback to using the latest cache if no exact match is found
        - v1-dependencies-
    - run: brew update
    - run: brew install wget cmake cppcheck tinyxml eigen pcre poco tinyxml2
    - run: brew install openssl
    - run: brew install asio console_bridge log4cxx spdlog
    - run: python3 -m pip install catkin_pkg empy ifcfg lark-parser lxml netifaces numpy pyparsing pyyaml setuptools argcomplete colcon-common-extensions
    - run: mkdir -p ~/ros2_install && cd ~/ros2_install && wget https://ci.ros2.org/view/packaging/job/packaging_osx/lastSuccessfulBuild/artifact/ws/ros2-package-osx-x86_64.tar.bz2 && tar xf ros2-package-osx-x86_64.tar.bz2
    - run: wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash
    - run: echo "source $HOME/.bashrc" >> ~/.bash_profile
    - run: cat ~/.bash_profile
    - run: nvm install v12.18.0
    - run: nvm alias default v12.18.0
    - run: node --version && npm --version && rm -rf ./node_modules/
    - run: source ~/ros2_install/ros2-osx/local_setup.bash && git submodule init && git submodule update && npm install --python=python2.7
    - run: export PATH="/usr/local/opt/python@2/libexec/bin:$PATH" && npm run lint
    # Save dependency cache
    - save_cache:
        key: v1-dependencies-{{ checksum "package.json" }}-{{ arch }}
        paths:
        - ./node_modules
    # Test
    - run: npm install istanbul coveralls
    - run: source ~/ros2_install/ros2-osx/local_setup.bash && export OPENSSL_ROOT_DIR="/usr/local/opt/openssl" && node scripts/compile_tests.js && node ./node_modules/.bin/istanbul cover ./scripts/run_test.js --report lcovonly && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js && rm -rf ./coverage
    # Teardown
    - run: find $HOME/Library/Developer/Xcode/DerivedData -name '*.xcactivitylog' -exec cp {} $CIRCLE_ARTIFACTS/xcactivitylog \; || true
    # Save test results
    - store_test_results:
        path: /tmp/circleci-test-results
    # Save artifacts
    - store_artifacts:
        path: /tmp/circleci-artifacts
