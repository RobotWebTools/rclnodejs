
name:  rclnodejs - Windows Build & Compatibility Test

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        node-version: [14.21.2, 16.19.0, 18.14.1, 19.X]
        ros_distribution:
          - foxy
          - humble
          - rolling
    steps:
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Setup ROS2
      uses: ros-tooling/setup-ros@v0.6
      with:
        required-ros-distributions: ${{ matrix.ros_distribution }}

    - name: Install ROS2 Rolling (Conditional)
      if: ${{ matrix.ros_distribution == 'rolling' }}
      shell: bash
      run: |
        wget --quiet https://ci.ros2.org/view/packaging/job/packaging_windows/lastSuccessfulBuild/artifact/ws/ros2-package-windows-AMD64.zip -O rolling.zip
        7z x rolling.zip -y -o/c/dev/rolling

    - name: Prebuild - Setup VS Dev Environment
      uses: seanmiddleditch/gha-setup-vsdevenv@v4

    - uses: actions/checkout@v3

    - name: Build rclnodejs
      shell: cmd
      run: |
        call "c:\dev\${{ matrix.ros_distribution }}\ros2-windows\setup.bat"
        npm i

    # On the windows/foxy combination the Eclipse CycloneDDS RMW implementation is used to workaround 
    # an error when loading the default fastrtps ddl
    - name: Test rclnodejs
      shell: cmd
      run: |
        call "c:\dev\${{ matrix.ros_distribution }}\ros2-windows\setup.bat"
        cmd /c "if ${{ matrix.ros_distribution }}==foxy (set RMW_IMPLEMENTATION=rmw_cyclonedds_cpp&&npm test)"
        cmd /c "if NOT ${{ matrix.ros_distribution }}==foxy (npm test)"